version: "3.9"

services:
  frontend:
    image: challenges-frontend:1.0
    environment:
      - SPRING_CLOUD_GATEWAY_HOST=gateway
    ports:
      - '3000:80'
    networks:
      - microservices
  multiplication:
    image: multiplication:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_KAFKA_HOST=kafka
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - kafka
      - consul-importer
    networks:
      - microservices
  gamification:
    image: gamification:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_KAFKA_HOST=kafka
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - kafka
      - consul-importer
    networks:
      - microservices
  gateway:
    image: gateway:0.0.1-SNAPSHOT
    container_name: gateway
    ports:
      - '8000:8000'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_KAFKA_HOST=kafka
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - kafka
      - consul-importer
    networks:
      - microservices
  logs:
    image: logs:0.0.1-SNAPSHOT
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_KAFKA_HOST=kafka
      - SPRING_CLOUD_ZIPKIN_HOST=zipkin
    depends_on:
      - kafka
      - consul-importer
    networks:
      - microservices
  namesrv:
    image: apache/rocketmq:5.3.0
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    networks:
      - microservices
    command: sh mqnamesrv
  broker:
    image: apache/rocketmq:5.3.0
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    depends_on:
      - namesrv
    networks:
      - microservices
    command: sh mqbroker
  proxy:
    image: apache/rocketmq:5.3.0
    container_name: rmqproxy
    networks:
      - microservices
    depends_on:
      - broker
      - namesrv
    ports:
      - 8080:8080
      - 8081:8081
    restart: on-failure
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    command: sh mqproxy
  nacos:
    image: nacos/nacos-server:v2.4.2
    container_name: nacos-standalone-mysql
    env_file:
      - ./env/nacos-standlone-mysql.env
    volumes:
      - ./standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - microservices
  mysql:
    container_name: mysql
    build:
      context: .
      dockerfile: ./image/mysql/8/Dockerfile
    image: example/mysql:8.0.30
    env_file:
      - ./env/mysql.env
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - microservices
  zipkin:
    image: 'openzipkin/zipkin'
    container_name: zipkin
    ports:
      - 9411:9411
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9411/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - microservices
networks:
  microservices:
    driver: bridge